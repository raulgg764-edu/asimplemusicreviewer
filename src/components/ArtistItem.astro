---
import { getImage } from "astro:assets";
import { getImageSpotify, spotifyToken } from "../utils";
import ArtistsModal from "./ArtistsModal.astro";
import { getCollection } from "astro:content";

const { artist } = Astro.props;
const reviews = await getCollection("reviews");
    const sortedReviews = reviews.sort(
        (a, b) =>
            new Date(b.data.releaseDate).getTime() -
            new Date(a.data.releaseDate).getTime(),
    );

const getArtistReleases = (artist: string) => {
    return sortedReviews.filter((release: any) =>
        release.data.artists.includes(artist),
    );
};

const artistReleases = getArtistReleases(artist);
const artistID = artist.replaceAll(" ", "");

/*const artistImg  = await fetch(`https://api.spotify.com/v1/search?q=${artist}&type=artist&limit=1`,{method:"GET", headers:{'Authorization':`Bearer ${spotifyToken}`}}).then(res => res.json()).then((data)=>{
    return data.artists.items[0].images[0].url
})*/
const artistImg = await getImageSpotify(artistID, "search");
---

<article
    class=`w-full h-full group transition-all ease-in-out transform text-white bg-zinc-900 `
    onclick={`window.modal${artistID}.showModal()`}
>
    <div
        class="relative list-none hover:cursor-pointer select-none font-bold flex justify-between h-full w-full"
    >
        <img class="flex object-cover w-full" src={artistImg} />
        <div
            class="absolute z-1  bottom-0 group-hover:top-0 transition-all duration-200 text-white flex items-start w-full  shadow-[inset_0px_-100px_0px_0px_black] group-hover:shadow-[inset_0px_-800px_0px_0px_black]"
        >
            <p
                class="line-clamp-1 h-full  px-4 py-4 text-2xl w-full text-white group-hover:text-emerald-400 duration-500 ease-in-out transition-all"
            >
                {artist}
            </p>
        </div>
    </div>
    <dialog
        id=`modal${artistID}`
        class="backdrop:bg-black/80 w-full xl:w-3/4 xl:h-3/4 rounded-2xl"
    >
        <ArtistsModal
            artist={artist}
            releases={artistReleases}
            img={artistImg}
        />
    </dialog>
</article>

<style>
    dialog[open] {
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        animation: fadein 0.3s ease-in;
    }

    @keyframes fadein {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
</style>
