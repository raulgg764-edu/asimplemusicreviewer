---
import { getImageSpotify } from "../utils";

let { release, extraClass } = Astro.props;

interface block_size {
    cols: number;
    rows: number;
}

const detectSize = (releaseType: string): block_size => {
    switch (releaseType) {
        case "single":
            return { cols: 1, rows: 2 };
        case "ab":
            return { cols: 1, rows: 2 };
        case "ep":
            return { cols: 2, rows: 2 };
        case "album":
            return { cols: 3, rows: 2 };
        case "compilation":
            return { cols: 3, rows: 2 };
        default:
            return { cols: 1, rows: 2 };
    }
};

const releaseItem = { ...release };

let size: block_size = detectSize(releaseItem.data.type);

const colsClassMap: any = { 1: "col-span-1", 2: "col-span-2", 3: "col-span-3" };
const rowsClassMap: any = { 1: "row-span-1", 2: "row-span-2", 3: "row-span-3" };

let sizeClass: string = `${colsClassMap[size.cols]} ${rowsClassMap[size.rows]}`;

let image: string = releaseItem.data.img;

const spotifyID = releaseItem.data.spotifyUrl.split("/")[5].split("?")[0]
const spotifyImg = await getImageSpotify(spotifyID, "id")
const img = spotifyImg ? spotifyImg : releaseItem.data.img;
const color = releaseItem.data.color
const artistImg = await getImageSpotify(releaseItem.data.artists[0], "search");;
---

<a
    class:list={[
        "base group py-20 w-full transform flex flex-col md:flex-row transition-all ease-in-out overflow-hidden text-black font-semibold md:px-12 h-screen ",
        extraClass,
    ]}
    style=`background-color: ${color};  border:2px solid var(--maincolor);`
    href=`../reviews/${releaseItem.id}`
    id=`${releaseItem.id}`
>
    <article class:list={[
        "group transform flex flex-col md:flex-row w-full items-center  gap-4 h-full ",
    ]}>
    
        <div class="flex items-center w-3/4 md:w-1/2 h-2/3 md:h-full aspect-square ">
            <img
            class="cover z-10  transform transition object-cover ease-in-out w-xl md:w-full"
            src={img}
            transition:name=`image-${release.id}`
            transition:persist
            />
            <img
            class="artistCover z-0 transform transition object-cover ease-in-out w-xl md:w-full aspect-square"
            src={artistImg}
            />
        </div>
     
     
  </div>
        <div
            class="releaseData transform py-4 md:py-8 md:px-8 flex flex-col transition ease-in-out gap-8 hover:cursor-pointer h-auto w-3/4 md:w-1/2 "
            style={`--maincolor: ${color};`}
        >
            <h2 transition:name=`title-${release.id}` class="text-4xl sm:text-5xl md:text-6xl line-clamp-3 font-extrabold break-words ">{releaseItem.data.title}</h2>
            <p transition:name=`artists-${release.id}`  class="text-2xl line-clamp-1 sm:line-clamp-2 md:line-clamp-none font-semibold ">
                {releaseItem.data.artists.join(", ")}
            </p>
        </div>
    
    </article>

    <style>
        img{
            
        }

        /*.a:hover{
            a {
                transition: all 0.2s ease-in-out;
                animation: blackHover 0.2s ease-in-out forwards;
            }
            .releaseData{
                outline: 2px solid var(--maincolor);
                color: var(--maincolor)
            }
        }*/

        a:has(.releaseData:hover){
            animation: blackHover 0.2s ease-in-out forwards;
            background-color: black;
            .releaseData{
                outline: 2px solid var(--maincolor);
                color: var(--maincolor)
            }
        }

        .cover{
            transition: all 0.2s ease-in-out;
        }

        .cover:hover{
            opacity: 0;
        }

        .artistCover{
            transform: translateX(-100%);
        }

        @keyframes cicle {
            50% {
                opacity: 0;
            }

            100%{
                opacity: 1;
            }
        }

        @keyframes blackHover {
            0% {
                color: black;
            }

            25% {
                box-shadow: inset 25vw 0px 0px 0px #000000;
                color: var(--maincolor);
            }

            50% {
                box-shadow: inset 50vw 0px 0px 0px #000000;
                color: var(--maincolor);
            }
            
            100% {
                box-shadow: inset 100vw 0px 0px 0px #000000;
                color: var(--maincolor);
            }
        }
    </style>
</a>
