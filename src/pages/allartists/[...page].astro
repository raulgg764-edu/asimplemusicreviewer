---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import NavBar from "../../components/NavBar.astro";
import PaginationButton from "../../components/PaginationButton.astro";
import ArtistItem from "../../components/ArtistItem.astro";

/*const url = new URL(Astro.request.url);
const currentPage = Number(url.searchParams.get('page')||1);

const totalArtists = artists.length;
const totalPages = Math.ceil(totalArtists  / artistsPerPage);

const startIndex = (currentPage-1) * artistsPerPage;
const endIndex = Math.min(startIndex + artistsPerPage, totalArtists);
const currentArtists = artists.slice(startIndex, endIndex);

const prevPage = currentPage > 1 ? currentPage - 1 : null; 
const nextPage = currentPage < totalPages ? currentPage + 1 : null; */

export const getStaticPaths = (async ({ paginate }) => {
    const artistsPerPage = 8;
    const reviews = await getCollection("reviews");
    const sortedReviews = reviews.sort(
        (a, b) =>
            new Date(b.data.releaseDate).getTime() -
            new Date(a.data.releaseDate).getTime(),
    );
    const artists = [
        ...new Set(
            sortedReviews
                .map((val) => {
                    return val.data.artists;
                })
                .flat(),
        ),
    ].sort((a, b) => a.localeCompare(b));

    return paginate(artists, {pageSize: artistsPerPage});
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<Layout
    customTitle="all the artists"
    extraClass="md:justify-between py-20 bg-black"
>
    <NavBar transition:persist />
    <div
        class="grid md:h-full md:grid-cols-4 items-start gap-4 px-8 md:px-16 w-full grid-rows-2"
    >
        {
            page.data.map((artist) => (
                <ArtistItem artist={artist} />
            ))
        }
    </div>

        <div class="pt-8">
            <PaginationButton prevPage={page.url.prev} nextPage={page.url.next} />
        </div>

    
</Layout>
